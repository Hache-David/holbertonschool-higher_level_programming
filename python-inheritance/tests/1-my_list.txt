---------------------------------------------------------
#doctest 1-my_list.py
---------------------------------------------------------
#Check if all argument of the list is an int.

>>> MyList = __import__('1-my_list').MyList

>>> my_list = MyList()
>>> type(my_list)
<class '1-my_list.MyList'>

>>> print(my_list)
[]

>>> my_list = MyList([1, 2, 3,4 ,5])
>>> print(my_list)
[1, 2, 3, 4, 5]

>>> my_list = MyList([1, 2, 3,4 ,"super"])
>>> print(my_list)
[1, 2, 3, 4, 'super']

>>> my_list = MyList(None)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: 'NoneType' object is not iterable

>>> my_list = MyList([1, 2], [3, 4])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: list expected at most 1 argument, got 2

>>> my_list.print_sorted()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/workspaces/holbertonschool/holbertonschool-higher_level_programming/python-inheritance/1-my_list.py", line 9, in print_sorted
    print(sorted(self))
TypeError: '<' not supported between instances of 'str' and 'int'

>>> my_list.print_sorted()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/workspaces/holbertonschool/holbertonschool-higher_level_programming/python-inheritance/1-my_list.py", line 9, in print_sorted
    print(sorted(self))
TypeError: '<' not supported between instances of 'NoneType' and 'int'

