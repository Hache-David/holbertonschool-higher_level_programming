-----------------------------------------------------
#doctest 0-add_integer.py
-----------------------------------------------------
#Check if value is a float or an int :

>>> add_integer = __import__('0-add_integer').add_integer

>>> add_integer(1, 2)
3
>>> add_integer(100, -2)
98
>>> add_integer(2)
100
>>> add_integer(100.3, -2)
98
>>> add_integer(-7, -9.5)
-16

=========================================================

# Error if the value a or b is not an integer :

>>> add_integer(1, 2, 3)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

>>> add_integer(super,3)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/workspaces/holbertonschool/holbertonschool-higher_level_programming/python-test_driven_development/0-add_integer.py", line 7, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer

>>> add_integer('o','i')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/workspaces/holbertonschool/holbertonschool-higher_level_programming/python-test_driven_development/0-add_integer.py", line 7, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer

>>> add_integer(None)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/workspaces/holbertonschool/holbertonschool-higher_level_programming/python-test_driven_development/0-add_integer.py", line 7, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer

>>> add_integer(float("inf"), 10)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/workspaces/holbertonschool/holbertonschool-higher_level_programming/python-test_driven_development/0-add_integer.py", line 10, in add_integer
    return int(a) + int(b)
OverflowError: cannot convert float infinity to integer

>>> add_integer(0, float('nan'))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/workspaces/holbertonschool/holbertonschool-higher_level_programming/python-test_driven_development/0-add_integer.py", line 10, in add_integer
    return int(a) + int(b)
ValueError: cannot convert float NaN to integer

>>> add_integer(1, 'o')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/workspaces/holbertonschool/holbertonschool-higher_level_programming/python-test_driven_development/0-add_integer.py", line 9, in add_integer
    raise TypeError("b must be an integer")
TypeError: b must be an integer
